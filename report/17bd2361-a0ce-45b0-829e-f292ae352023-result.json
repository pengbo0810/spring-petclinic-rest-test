{"name": "test_bulk_create_20_vets", "status": "failed", "statusDetails": {"message": "AssertionError: Create failed: 400 {\"type\":\"http://localhost:9966/petclinic/api/vets\",\"title\":\"MethodArgumentNotValidException\",\"status\":400,\"detail\":\"Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.springframework.samples.petclinic.rest.dto.VetDto> org.springframework.samples.petclinic.rest.controller.VetRestController.addVet(org.springframework.samples.petclinic.rest.dto.VetDto): [Field error in object 'vetDto' on field 'firstName': rejected value [AUTO_Ovakda]; codes [Pattern.vetDto.firstName,Pattern.firstName,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [vetDto.firstName,firstName]; arguments []; default message [firstName],[Ljakarta.validation.constraints.Pattern$Flag;@37538a44,^[\\\\p{L}]+([ '-][\\\\p{L}]+){0,2}$]; default message [需要匹配正则表达式\\\"^[\\\\p{L}]+([ '-][\\\\p{L}]+){0,2}$\\\"]] \",\"instance\":\"/petclinic/api/vets\",\"timestamp\":\"2025-08-19T03:54:54.338019300Z\"}\nassert 400 in (200, 201)\n +  where 400 = <Response [400]>.status_code", "trace": "@pytest.mark.order(\"last\")\n    def test_bulk_create_20_vets():\n        specs_all = _fetch_specialties()\n        created_ids = []\n    \n        # 1) 批量创建 20 个\n        for i in range(20):\n            payload = _build_payload(specs_all)\n            resp = requests.post(f\"{BASE_URL}/vets\", json=payload, timeout=10)\n>           assert resp.status_code in (200, 201), f\"Create failed: {resp.status_code} {resp.text}\"\nE           AssertionError: Create failed: 400 {\"type\":\"http://localhost:9966/petclinic/api/vets\",\"title\":\"MethodArgumentNotValidException\",\"status\":400,\"detail\":\"Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.springframework.samples.petclinic.rest.dto.VetDto> org.springframework.samples.petclinic.rest.controller.VetRestController.addVet(org.springframework.samples.petclinic.rest.dto.VetDto): [Field error in object 'vetDto' on field 'firstName': rejected value [AUTO_Ovakda]; codes [Pattern.vetDto.firstName,Pattern.firstName,Pattern.java.lang.String,Pattern]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [vetDto.firstName,firstName]; arguments []; default message [firstName],[Ljakarta.validation.constraints.Pattern$Flag;@37538a44,^[\\\\p{L}]+([ '-][\\\\p{L}]+){0,2}$]; default message [需要匹配正则表达式\\\"^[\\\\p{L}]+([ '-][\\\\p{L}]+){0,2}$\\\"]] \",\"instance\":\"/petclinic/api/vets\",\"timestamp\":\"2025-08-19T03:54:54.338019300Z\"}\nE           assert 400 in (200, 201)\nE            +  where 400 = <Response [400]>.status_code\n\nsrc\\test\\tests_api\\test_bulk_vets.py:51: AssertionError"}, "start": 1755575694221, "stop": 1755575694373, "uuid": "fd7d2e57-6794-43be-b501-84da62f6c2d7", "historyId": "eb776a56b8d0012f91241c3dd24292e0", "testCaseId": "eb776a56b8d0012f91241c3dd24292e0", "fullName": "src.test.tests_api.test_bulk_vets#test_bulk_create_20_vets", "labels": [{"name": "parentSuite", "value": "src.test.tests_api"}, {"name": "suite", "value": "test_bulk_vets"}, {"name": "host", "value": "LAPTOP-NDFADGOV"}, {"name": "thread", "value": "16896-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.test.tests_api.test_bulk_vets"}], "titlePath": ["src", "test", "tests_api", "test_bulk_vets.py"]}